// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracing.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TracingEvent struct {
	RequestId  string `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Scheme     string `protobuf:"bytes,2,opt,name=scheme" json:"scheme,omitempty"`
	Host       string `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Method     string `protobuf:"bytes,4,opt,name=method" json:"method,omitempty"`
	RequestUri string `protobuf:"bytes,5,opt,name=request_uri,json=requestUri" json:"request_uri,omitempty"`
	Proto      string `protobuf:"bytes,6,opt,name=proto" json:"proto,omitempty"`
	RemoteAddr string `protobuf:"bytes,7,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	Status     int32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
	Bytes      int32  `protobuf:"varint,9,opt,name=bytes" json:"bytes,omitempty"`
	Duration   int64  `protobuf:"varint,10,opt,name=duration" json:"duration,omitempty"`
}

func (m *TracingEvent) Reset()                    { *m = TracingEvent{} }
func (m *TracingEvent) String() string            { return proto1.CompactTextString(m) }
func (*TracingEvent) ProtoMessage()               {}
func (*TracingEvent) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *TracingEvent) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TracingEvent) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *TracingEvent) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *TracingEvent) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *TracingEvent) GetRequestUri() string {
	if m != nil {
		return m.RequestUri
	}
	return ""
}

func (m *TracingEvent) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *TracingEvent) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *TracingEvent) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TracingEvent) GetBytes() int32 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *TracingEvent) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func init() {
	proto1.RegisterType((*TracingEvent)(nil), "proto.TracingEvent")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TracingProvider service

type TracingProviderClient interface {
	Send(ctx context.Context, in *TracingEvent, opts ...grpc.CallOption) (*Empty, error)
}

type tracingProviderClient struct {
	cc *grpc.ClientConn
}

func NewTracingProviderClient(cc *grpc.ClientConn) TracingProviderClient {
	return &tracingProviderClient{cc}
}

func (c *tracingProviderClient) Send(ctx context.Context, in *TracingEvent, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.TracingProvider/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TracingProvider service

type TracingProviderServer interface {
	Send(context.Context, *TracingEvent) (*Empty, error)
}

func RegisterTracingProviderServer(s *grpc.Server, srv TracingProviderServer) {
	s.RegisterService(&_TracingProvider_serviceDesc, srv)
}

func _TracingProvider_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TracingEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TracingProviderServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TracingProvider/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TracingProviderServer).Send(ctx, req.(*TracingEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _TracingProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TracingProvider",
	HandlerType: (*TracingProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _TracingProvider_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tracing.proto",
}

func init() { proto1.RegisterFile("tracing.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xb1, 0x4e, 0xc3, 0x40,
	0x0c, 0x86, 0x95, 0x36, 0x09, 0x8d, 0x5b, 0x84, 0x74, 0x20, 0x74, 0x8a, 0x84, 0x88, 0x98, 0xc2,
	0xd2, 0x01, 0x56, 0x16, 0x86, 0x0e, 0x6c, 0x28, 0xc0, 0x5c, 0xa5, 0xb5, 0x45, 0x6e, 0x48, 0xae,
	0x38, 0x4e, 0xa5, 0x3e, 0x07, 0x2f, 0x8c, 0x72, 0x77, 0x41, 0x9d, 0x92, 0xef, 0xb3, 0x7d, 0xb6,
	0x7e, 0xb8, 0x14, 0xae, 0xf7, 0xa6, 0xfb, 0x5e, 0x1f, 0xd8, 0x8a, 0x55, 0x89, 0xfb, 0xe4, 0x4b,
	0x6a, 0x0f, 0x72, 0xf2, 0xee, 0xe1, 0x77, 0x06, 0xab, 0x4f, 0xdf, 0xb5, 0x39, 0x52, 0x27, 0xea,
	0x0e, 0x80, 0xe9, 0x67, 0xa0, 0x5e, 0xb6, 0x06, 0x75, 0x54, 0x44, 0x65, 0x56, 0x65, 0xc1, 0xbc,
	0xa1, 0xba, 0x85, 0xb4, 0xdf, 0x37, 0xd4, 0x92, 0x9e, 0xb9, 0x52, 0x20, 0xa5, 0x20, 0x6e, 0x6c,
	0x2f, 0x7a, 0xee, 0xac, 0xfb, 0x1f, 0x7b, 0x5b, 0x92, 0xc6, 0xa2, 0x8e, 0x7d, 0xaf, 0x27, 0x75,
	0x0f, 0xcb, 0x69, 0xc5, 0xc0, 0x46, 0x27, 0xae, 0x38, 0x6d, 0xfd, 0x62, 0xa3, 0x6e, 0xc0, 0x9f,
	0xaa, 0x53, 0x57, 0xf2, 0xe0, 0xc7, 0x5a, 0x2b, 0xb4, 0xad, 0x11, 0x59, 0x5f, 0x4c, 0x63, 0xa3,
	0x7a, 0x45, 0x64, 0x77, 0x9b, 0xd4, 0x32, 0xf4, 0x7a, 0x51, 0x44, 0x65, 0x52, 0x05, 0x1a, 0x9f,
	0xdb, 0x9d, 0x84, 0x7a, 0x9d, 0x39, 0xed, 0x41, 0xe5, 0xb0, 0xc0, 0x81, 0x6b, 0x31, 0xb6, 0xd3,
	0x50, 0x44, 0xe5, 0xbc, 0xfa, 0xe7, 0xa7, 0x17, 0xb8, 0x0a, 0xa1, 0xbc, 0xb3, 0x3d, 0x1a, 0x24,
	0x56, 0x8f, 0x10, 0x7f, 0x50, 0x87, 0xea, 0xda, 0x07, 0xb7, 0x3e, 0x0f, 0x2d, 0x5f, 0x05, 0xb9,
	0x19, 0x93, 0xdd, 0xa5, 0x0e, 0x9e, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x04, 0x4a, 0x20, 0x7c,
	0x7f, 0x01, 0x00, 0x00,
}
